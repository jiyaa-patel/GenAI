# Generated by Django 5.2.5 on 2025-09-13 08:46

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(db_default=models.Func(function='uuid_generate_v4'), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.TextField()),
                ('content_type', models.TextField(blank=True, null=True)),
                ('gcs_pdf_uri', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('ready', 'Ready'), ('failed', 'Failed')], default='uploaded', max_length=20)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(db_default=models.Func(function='uuid_generate_v4'), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('message_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('last_updated', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(blank=True, db_column='document_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_sessions', to='geniai.document')),
            ],
            options={
                'db_table': 'chat_sessions',
                'ordering': ['-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='DocumentChunk',
            fields=[
                ('id', models.UUIDField(db_default=models.Func(function='uuid_generate_v4'), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chunk_index', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('text', models.TextField()),
                ('token_count', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('document', models.ForeignKey(db_column='document_id', on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='geniai.document')),
            ],
            options={
                'db_table': 'document_chunks',
                'ordering': ['document', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='VectorIndex',
            fields=[
                ('id', models.UUIDField(db_default=models.Func(function='uuid_generate_v4'), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gcs_faiss_uri', models.TextField()),
                ('gcs_chunks_uri', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('document', models.OneToOneField(db_column='document_id', on_delete=django.db.models.deletion.CASCADE, related_name='vector_index', to='geniai.document')),
            ],
            options={
                'db_table': 'vector_indexes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(db_default=models.Func(function='uuid_generate_v4'), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=10)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now())),
                ('chat_session', models.ForeignKey(db_column='chat_session_id', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='geniai.chatsession')),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['chat_session', 'created_at'], name='chat_messag_chat_se_b79339_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['user', 'status'], name='documents_user_id_10766e_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['created_at'], name='documents_created_3c6eaa_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', 'last_updated'], name='chat_sessio_user_id_fe9830_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['document'], name='chat_sessio_documen_1adddf_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['document', 'chunk_index'], name='document_ch_documen_15f3c0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentchunk',
            unique_together={('document', 'chunk_index')},
        ),
    ]
